name: Build And Push Docker Image

on: workflow_dispatch

env:
  EC_IMAGE_NAME: fefx/docker-easyconnect
  ATRUST_IMAGE_NAME: fefx/docker-atrust
  ARCHS: mips64le arm64 i386 amd64
  ATRUST_ARCHS: mips64le arm64 amd64

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Compare pkg_version.xml
        id: compare
        run: |
          wget http://download.sangfor.com.cn/download/product/sslvpn/pkg/pkg_version.xml -O pkg_version_remote.xml
          diff pkg_version.xml pkg_version_remote.xml && echo "PKG_UPDATE=true" >> $GITHUB_OUTPUT
          echo "${{ steps.compare.outputs.PKG_UPDATE }}"
        shell: bash

      - name: Login to Docker registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: steps.compare.outputs.PKG_UPDATE == 'true'

      - name: Build Docker image
        run: |
          to-tag() {
            tag="$( IFS=-; printf %s "$*"; )"
            if [ -n "$tag" ]; then
              printf %s "$tag"
            else
              echo latest
            fi
          }
          docker-build() {
            #docker pull $1
            docker buildx build --build-arg BUILD_ENV=actions "$@"
          }
          branch="$(git branch --show-current)"
          case "$branch" in
            master) prefix= ;;
            develop) prefix=dev ;;
            *) prefix="$branch" ;;
          esac

          build() {
            for ver in 7.6.3 7.6.7; do
              docker-build --platform "$1" -t hagb/docker-easyconnect:build $(cat build-args/$ver-"$1".txt) -f Dockerfile.build .
              docker-build --platform "$1" -t ${{ env.EC_IMAGE_NAME }}:$(to-tag $prefix $ver $1) $(cat build-args/$ver-"$1".txt) -f Dockerfile .
              docker-build --platform "$1" -t ${{ env.EC_IMAGE_NAME }}:$(to-tag $prefix vncless $ver $1) $(cat build-args/$ver-"$1".txt) -f Dockerfile.vncless .
            done

            if [ -e build-args/atrust-"$1".txt ]; then
              docker-build --platform "$1" -t hagb/docker-easyconnect:build $(cat build-args/atrust-"$1".txt) -f Dockerfile.build .
              docker-build --platform "$1" -t ${{ env.ATRUST_IMAGE_NAME }}:$(to-tag $prefix $1) $(cat build-args/atrust-"$1".txt) -f Dockerfile .
              docker-build --platform "$1" -t ${{ env.ATRUST_IMAGE_NAME }}:$(to-tag $prefix vncless $1) $(cat build-args/atrust-"$1".txt) -f Dockerfile.vncless .
            fi

            if [ amd64 = "$1" ]; then
              docker-build -t ${{ env.EC_IMAGE_NAME }}:$(to-tag $prefix cli) -f Dockerfile.cli .
            fi
          }

          sudo apt-get -y install binfmt-support qemu-user-static

          for arch in ${{ env.ARCHS }}; do
            build $arch
          done

          docker image rm hagb/docker-easyconnect:build
        if: env.PKG_UPDATE == 'true'

      - name: Push Docker image
        run: |
          to-tag() {
            IFS=-
            tag="$(printf %s "$*")"
            if [ -n "$tag" ]; then
              printf %s "$tag"
            else
              echo latest
            fi
          }
          branch="$(git branch --show-current)"
          case "$branch" in
            master)
              prefix=
              ;;
            develop)
              prefix=dev
              ;;
            *)
              prefix="$branch"
              ;;
          esac

          token="$( curl -sH "Content-Type: application/json" \
                      -X POST -d "{\"username\": \"${{ secrets.DOCKERHUB_USERNAME }}\", \"password\": \"${{ secrets.DOCKERHUB_TOKEN }}\"}" \
                      https://hub.docker.com/v2/users/login/ |
                    jq -r .token )"
          delete_tag() {
              curl -sH "Content-Type: application/json" -X DELETE -H "Authorization: JWT $token" \
                    https://hub.docker.com/v2/repositories/$1/tags/$2/
          }

          docker push --all-tags ${{ env.EC_IMAGE_NAME }}
          docker push --all-tags ${{ env.ATRUST_IMAGE_NAME }}

          for ver in 7.6.3 7.6.7; do
            for vncless in "" vncless; do
              for arch in ${{ env.ARCHS }}; do
                docker manifest create ${{ env.EC_IMAGE_NAME }}:$(to-tag $prefix $vncless $ver) --amend ${{ env.EC_IMAGE_NAME }}:$(to-tag $prefix $vncless $ver $arch)
              done

              docker manifest push ${{ env.EC_IMAGE_NAME }}:$(to-tag $prefix $vncless $ver)

              if [ 7.6.7 = $ver ]; then
                for arch in ${{ env.ARCHS }}; do
                  docker manifest create ${{ env.EC_IMAGE_NAME }}:$(to-tag $prefix $vncless) --amend ${{ env.EC_IMAGE_NAME }}:$(to-tag $prefix $vncless $ver $arch)
                done
                docker manifest push ${{ env.EC_IMAGE_NAME }}:$(to-tag $prefix $vncless)
              fi

              for arch in ${{ env.ARCHS }}; do
                delete_tag ${{ env.EC_IMAGE_NAME }} $(to-tag $prefix $vncless $ver $arch)
              done
            done
          done

          for vncless in "" vncless; do
            for arch in ${{ env.ARCHS }}; do
              if [ -e build-args/atrust-"$arch".txt ]; then
                docker manifest create ${{ env.ATRUST_IMAGE_NAME }}:$(to-tag $prefix $vncless) --amend ${{ env.ATRUST_IMAGE_NAME }}:$(to-tag $prefix $vncless $arch)
              fi
            done

            docker manifest push ${{ env.ATRUST_IMAGE_NAME }}:$(to-tag $prefix $vncless)

            for arch in ${{ env.ARCHS }}; do
              [ ! -e build-args/atrust-$arch.txt ] || delete_tag ${{ env.ATRUST_IMAGE_NAME }} $(to-tag $prefix $vncless $arch)
            done
          done
        if: steps.compare.outputs.PKG_UPDATE == 'true'

      - name: Replace pkg_version.xml
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          cp pkg_version_remote.xml pkg_version.xml
          git add pkg_version.xml
          git commit -m "Update pkg_version.xml"
          git push
        if: steps.compare.outputs.PKG_UPDATE == 'true'
